////
/// These helpers are taken from Guss Typography
/// https://github.com/guardian/guss-typography/blob/master/_typography.helpers.scss
/// @group o-typography
////


///
/// Grab all levels of a font the font-scale
///
/// @param {String} $name - Name of the font-scale matrix (eg: headline)
/// @param {Map} $font-scale ($font-scale)
///
/// @example
///  font-size: get-scale(header);
///
/// @requires {variable} $font-scale
///
/// @return {Map}
///
@function get-scale($name, $font-scale: $o-typography-font-scale) {
    @return map-get($font-scale, $name);
}

///
/// Grab info for a particular level of a font-scale
///
/// @param {String} $name - Name of the font-scale in the matrix (eg: headline)
/// @param {Number} $level - Level in the matrix
/// @param {Map} $font-scale ($font-scale)
///
/// @example
///  font-size: get-scale-level(header, 1);
///
/// @requires {variable} $font-scale
/// @requires {function} get-scale
///
/// @return {Map}
///
@function get-scale-level($name, $level, $font-scale: $o-typography-font-scale) {
    @return map-get(get-scale($name, $font-scale), $level);
}

///
/// Font-size and line-height shorthand
///
/// @param {Number} $size
/// @param {Number} $line-height ($size)
///
/// @example
///  @include font-size(18, 24);
///
/// @requires {function} convert-to-px
///
@mixin font-size($size, $line-height: $size) {
    font-size: convert-to-px($size);
    line-height: convert-to-px($line-height);
}

///
/// Get a font-size for a level in the font-scale matrix
///
/// @param {String} $name - Name of the font-scale in the matrix (eg: headline)
/// @param {Number} $level - Level in the matrix
/// @param {Map} $font-scale - Configuration
///
/// @example
///  font-size: get-font-size(header, 3);
///
/// @requires {variable} $font-scale
/// @requires {function} convert-to-px
/// @requires {function} get-scale-level
///
/// @return {Number}
///
@function get-font-size($name, $level, $font-scale: $o-typography-font-scale, $is-fallback-font: false) {
	$scale-by: if(
		$is-fallback-font,
		map-get(map-get($_o-typography-progressive-font-fallbacks, $name), 'fallback-scale'),
		1
	);
    @return convert-to-px(map-get(get-scale-level($name, $level, $font-scale), font-size) * $scale-by);
}

///
/// Get a line-height for a level in the font-scale matrix
///
/// @param {String} $name - Name of the font-scale in the matrix (eg: headline)
/// @param {Number} $level - Level in the matrix
/// @param {Map} $font-scale - Configuration
///
/// @example
///  font-size: get-line-height(header, 3);
///
/// @requires {variable} $font-scale
/// @requires {function} convert-to-px
/// @requires {function} get-scale-level
///
/// @return {Number}
///
@function get-line-height($name, $level, $font-scale: $o-typography-font-scale) {
    @return convert-to-px(map-get(get-scale-level($name, $level, $font-scale), line-height));
}

///
/// Turn any value into pixels
///
/// @param {Number} $value
///
/// @example
///  font-size: convert-to-px(14); // 14px
///
/// @return {Number}
///
@function convert-to-px($value) {
    @if (type-of($value) == number and $value != 0) {
        $value: if(unitless($value), $value * 1px, $value);
    }
    @return $value;
}

@function scale-fallback-font-size($name, $size) {
	$scale-by: map-get(map-get($_o-typography-progressive-font-fallbacks, $name), 'fallback-scale');
	@return $size * $scale-by;
}
